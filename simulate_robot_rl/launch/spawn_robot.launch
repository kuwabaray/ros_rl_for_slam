<launch>
  <!-- You may override arg parmaters when including this launch file -->
  <arg name="x_pos" default="0.0"/>
  <arg name="y_pos" default="0.0"/>
  <arg name="z_pos" default="0.0"/>
  <arg name="roll" default="0.0"/>
  <arg name="pitch" default="0.0"/>
  <arg name="yaw" default="0.0"/>
 <!-- Spawn the robot into Gazebo with the turtlebot description -->
 <param name="robot_description" command="$(find xacro)/xacro --inorder $(find ancro_description)/urdf/ancro-copy.xacro" />
 <node pkg="gazebo_ros" type="spawn_model" name="rosbot_spawn" 
   args="-urdf -param robot_description -model rosbot
          -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) 
          -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)">
  <remap from="tf" to="gazebo_tf" />
  <remap from="odom" to="odom" />
 </node>
 <!-- 
       Publish robot and joint states. This allows rviz to display robot data, and in 
       the robot's coordinate frame. These nodes could go into the robot application 
       .launch files instead.
   -->
 <rosparam command="load" file="$(find joint_state_controller)/joint_state_controller.yaml" />
 <node name="joint_state_controller_spawner" pkg="controller_manager" type="spawner" output="screen" args="joint_state_controller" />

 <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
   <param name="use_tf_static" value="false"/>
 </node>
</launch>
